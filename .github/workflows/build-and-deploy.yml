name: 🚀 Build and Deploy KishansKraft Website

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: 🏗️ Build Website
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: |
        npm ci
        
    - name: 🔍 Run Security Audit
      run: npm audit --audit-level=high
      
    - name: 🏗️ Build Production Site
      run: npm run build
      
    - name: 🧪 Test Build Output
      run: |
        ls -la dist/
        # Check if essential files exist
        test -f dist/index.html || exit 1
        test -f dist/products.html || exit 1
        test -f dist/assets/css/style.css || exit 1
        test -f dist/assets/js/site.js || exit 1
        test -f dist/sw.js || exit 1
        test -f dist/manifest.json || exit 1
        echo "✅ All essential files present"
        
    - name: 📊 Analyze Bundle Size
      run: npm run analyze
      
    - name: 📤 Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: website-build-${{ matrix.node-version }}
        path: dist/
        retention-days: 30

  deploy-preview:
    name: 🌐 Deploy Preview
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: website-build-20
        path: dist/
        
    - name: 🚀 Deploy to Preview Environment
      run: |
        echo "🔗 Preview URL: https://preview-${{ github.event.number }}.kishans-kraft.dev"
        echo "This would deploy to a preview environment in production"

  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: production
      url: https://kishans-kraft.com
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 📥 Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: website-build-20
        path: dist/
        
    - name: 🔧 Setup Deployment Tools
      run: |
        # Install deployment dependencies
        sudo apt-get update
        sudo apt-get install -y rsync openssh-client
        
    - name: 🚀 Deploy to Production Server
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
      run: |
        # Setup SSH key
        mkdir -p ~/.ssh
        echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "$DEPLOY_HOST" >> ~/.ssh/known_hosts
        
        # Deploy files
        rsync -avz --delete \
          --exclude='.git*' \
          --exclude='node_modules' \
          --exclude='*.log' \
          dist/ "$DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/"
        
        echo "✅ Deployed to production successfully!"

  lighthouse:
    name: 🔍 Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: website-build-20
        path: dist/
        
    - name: 🚀 Start Local Server
      run: |
        cd dist
        npx serve . &
        sleep 5
        
    - name: 🔍 Run Lighthouse Audit
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: './lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true

  notify:
    name: 📢 Notify Deployment Status  
    runs-on: ubuntu-latest
    needs: [build, deploy-production]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📢 Success Notification
      if: needs.deploy-production.result == 'success'
      run: |
        echo "🎉 KishansKraft website deployed successfully!"
        echo "🌐 Live at: https://kishans-kraft.com"
        
    - name: ❌ Failure Notification
      if: needs.deploy-production.result == 'failure'
      run: |
        echo "❌ Deployment failed. Check logs for details."
        exit 1